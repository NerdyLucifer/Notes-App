{"version":3,"sources":["components/Note.jsx","components/AddNote.jsx","components/NotesList.js","components/Search.jsx","components/Header.jsx","App.js","index.js"],"names":["Note","note","handleDeleteNode","id","text","date","className","size","onClick","AddNote","handleAddNote","useState","noteText","SetNoteText","remaining","Setremaining","cols","rows","placeholder","onChange","e","target","value","trim","length","handleChange","NotesList","notes","map","Search","handleSearchNote","type","Header","handleToggleDarkMode","prevDarkMode","App","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","newText","Date","newNote","nanoid","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1944b05f.chunk.js","sourcesContent":["import { MdDeleteForever } from \"react-icons/md\";\nconst Note = ({ note, handleDeleteNode }) => {\n  const { id, text, date } = note;\n  return (\n    <div className=\"note\">\n      <span className=\"text-area\">{text}</span>\n      <div className=\"note-footer\">\n        <small>{date}</small>\n        <MdDeleteForever\n          className=\"delete-icon\"\n          size=\"1.8rem\"\n          onClick={() => {\n            handleDeleteNode(id);\n          }}\n        ></MdDeleteForever>\n      </div>\n    </div>\n  );\n};\nexport default Note;\n","import { useState } from \"react\";\nconst AddNote = ({ handleAddNote }) => {\n  const [noteText, SetNoteText] = useState(\"\");\n  const [remaining, Setremaining] = useState(200);\n  const handleChange = (e) => {\n    SetNoteText(e.target.value);\n    Setremaining(200 - noteText.trim().length);\n  };\n  const handleSave = () => {\n    if (noteText.trim().length <= 200 && noteText.trim().length>0) {\n      handleAddNote(noteText);\n      SetNoteText(\"\");\n      Setremaining(200);\n    }\n  };\n  return (\n    <div className=\"note new\">\n      <textarea\n        cols=\"10\"\n        rows=\"8\"\n        placeholder=\"Type to add note...\"\n        onChange={(e) => handleChange(e)}\n        value={noteText}\n      ></textarea>\n      <div className=\"note-footer\">\n        <small>Characters remaining:{remaining}</small>\n        <button className=\"save\" onClick={() => handleSave()}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default AddNote;\n","import Note from \"./Note\";\nimport AddNote from \"./AddNote\";\nconst NotesList = ({ notes, handleAddNote,handleDeleteNode }) => {\n  return (\n    <div className=\"notes-list\">\n      {notes.map((note) => {\n        return <Note note={note} handleDeleteNode={handleDeleteNode}/>;\n      })}\n      <AddNote handleAddNote={handleAddNote}/>\n    </div>\n  );\n};\nexport default NotesList;\n","import React from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nconst Search = ({ handleSearchNote }) => {\n  return (\n    <div className=\"search\">\n      <MdSearch className=\"search-icons\" size=\"1.3em\"></MdSearch>\n      <input\n        type=\"text\"\n        placeholder=\"Type to search...\"\n        onChange={(e) => {\n          handleSearchNote(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\nexport default Search;\n","const Header = ({ handleToggleDarkMode }) => {\n  return (\n    <div className=\"header\">\n      <h1>Notes</h1>\n      <button\n        className=\"save\"\n        onClick={() => handleToggleDarkMode((prevDarkMode) => !prevDarkMode)}\n      >\n        Toggle Mode\n      </button>\n    </div>\n  );\n};\n\nexport default Header;\n","import NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\nimport { useState,useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const addNote = (newText) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: newText,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [darkMode, setDarkMode] = useState(false);\n\n   useEffect(() => {\n     const savedNotes=JSON.parse(localStorage.getItem('react-notes-app-data'));\n     if (savedNotes) {\n       setNotes(savedNotes);\n     }\n   }, [])\n  useEffect(() => {\n    localStorage.setItem('react-notes-app-data', JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NotesList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNode={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}